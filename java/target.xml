<project name="target">
  <description>Common targets</description>

  <!--
   If you want to override any default build properties, create a
   custom.properties file containing the overriding properties.  Do not check in
   this file into source control because it contains your personal settings.
  -->
  <property file="${top.dir}/custom.properties"/>

  <!-- Load default build properties. -->
  <property file="${top.dir}/default.properties"/>
   
  <!-- Initialize build directory structure. -->
  <target name="init">
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
    <mkdir dir="${test.reports.dir}"/>
  </target>

  <target name="version">
    <!-- Get version from tag. -->
    <exec
        osfamily="unix"
        executable="git"
        outputproperty="MULLET_VERSION"
        failifexecutionfails="false">
      <arg value="describe"/>
    </exec>

    <exec
        osfamily="windows"
        executable="cmd"
        outputproperty="MULLET_VERSION"
        failifexecutionfails="false">
      <arg value="/c"/>
      <arg value="git"/>
      <arg value="describe"/>
    </exec>

    <!-- Set property if the execution failed. -->
    <property name="MULLET_VERSION" value="UNKNOWN"/>
    <echo message="Version ${MULLET_VERSION}"/>

    <!-- Get build number. -->
    <exec
        osfamily="unix"
        executable="git"
        outputproperty="BUILD_NUMBER"
        failifexecutionfails="false">
      <arg value="describe"/>
      <arg value="--match"/>
      <arg value="build"/>
      <redirector>
        <outputfilterchain>
          <tokenfilter>
            <replaceregex pattern="^[^-]+-" replace=""/>
            <replaceregex pattern="-.+$" replace=""/>
          </tokenfilter>
       </outputfilterchain>
     </redirector>
    </exec>

    <exec
        osfamily="windows"
        executable="cmd"
        outputproperty="BUILD_NUMBER"
        failifexecutionfails="false">
      <arg value="/c"/>
      <arg value="git"/>
      <arg value="describe"/>
      <arg value="--match"/>
      <arg value="build"/>
      <redirector>
        <outputfilterchain>
          <tokenfilter>
            <replaceregex pattern="^[^-]+-" replace=""/>
            <replaceregex pattern="-.+$" replace=""/>
          </tokenfilter>
       </outputfilterchain>
     </redirector>
    </exec>

    <!-- Set property if the execution failed. -->
    <property name="BUILD_NUMBER" value="UNKNOWN"/>
    <echo message="Build number ${BUILD_NUMBER}"/>
  </target>

  <!-- Substitute tokens in run-time configuration files. -->
  <target name="configure" depends="init, version">
    <copy todir="${classes.dir}" overwrite="true">
      <fileset dir="${template.dir}"/>
      <filterset>
        <filter token="MULLET_VERSION" value="${MULLET_VERSION}"/>
        <filter token="BUILD_NUMBER" value="${BUILD_NUMBER}"/> 
      </filterset>
    </copy>
  </target>

  <!-- Compile main code -->
  <target name="compile" depends="init">
    <javac
        srcdir="${src.dir}"
        destdir="${classes.dir}"
        classpathref="compile.classpath"
        debug="on"
        source="${javac.target}"
        target="${javac.target}"
        includeantruntime="false"/>

    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <!-- classpath for compiling tests -->
  <path id="test.compile.classpath">
    <pathelement location="${classes.dir}"/>
    <path refid="compile.classpath"/>
  </path>

  <!-- Compile tests. -->
  <target name="compile-test" depends="compile">
    <javac
        srcdir="${test.src.dir}"
        destdir="${test.classes.dir}"
        classpathref="test.compile.classpath"
        debug="on"
        source="${javac.target}"
        target="${javac.target}"
        includeantruntime="false"/>

    <copy todir="${test.classes.dir}">
      <fileset dir="${test.src.dir}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <!-- Run tests. -->
  <target name="test" depends="compile-test">
    <junit fork="yes" haltonfailure="yes">
      <classpath>
        <pathelement location="${test.classes.dir}"/>
        <path refid="test.compile.classpath"/>
      </classpath>

      <formatter type="xml"/>

      <batchtest todir="${test.reports.dir}">
        <fileset dir="${test.src.dir}">
          <include name="**/*Test.java"/>
          <exclude name="**/*IntegrationTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- Create JAR. -->
  <target name="jar" depends="configure, compile">
    <property
        name="jar.file"
        value="${target.dir}/${ant.project.name}-${MULLET_VERSION}.${BUILD_NUMBER}.jar"/>

    <jar jarfile="${jar.file}" basedir="${classes.dir}">
      <manifest>
        <attribute
            name="Implementation-Version"
            value="${MULLET_VERSION}.${BUILD_NUMBER}"/>
      </manifest>
    </jar>

    <property
        name="repo.jar.dir"
        value="${repository.dir}/${ant.project.name}/${ant.project.name}/SNAPSHOT"/>

    <mkdir dir="${repo.jar.dir}"/>

    <property
        name="repo.jar.file"
        value="${repo.jar.dir}/${ant.project.name}-SNAPSHOT.jar"/>

    <copy file="${jar.file}" tofile="${repo.jar.file}"/>
  </target>  

  <!-- Delete artifacts created by build. -->
  <target name="clean">
    <delete dir="${target.dir}"/>
  </target>

</project>
