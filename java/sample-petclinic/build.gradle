apply plugin: 'eclipse'
apply plugin: 'jetty'

sourceCompatibility = 1.6
ext {
    logbackVersion = '0.9.28'
    slf4jVersion = '1.6.1'
    springVersion = '3.1.2.RELEASE'
}

repositories {
    flatDir {
        dirs "${projectDir}/../core/build/libs"
    }
    mavenLocal()
    maven {
        url 'http://repository.springsource.com/maven/bundles/release'
    }
    mavenCentral()
}

configurations.all {
  resolutionStrategy.force 'xalan:xalan:2.7.1'
}

dependencies {
    compile 'com.github.pukkaone.mullet:mullet-core:SNAPSHOT'
    compile 'com.kenai.nbpwr:com-sun-syndication-feed:1.0-201002241208'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'org.aspectj:aspectjweaver:1.7.1'
    providedCompile 'org.jboss.spec:jboss-javaee-6.0:3.0.2.Final'
    compile "org.springframework:spring-aspects:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-oxm:${springVersion}"
    compile("org.springframework:spring-webmvc:${springVersion}") {
        exclude module: 'commons-logging'
    }
    compile 'org.springframework.samples:org.springframework.petclinic.repository.jdbc:2.1.0.RELEASE'
    compile "org.slf4j:slf4j-api:${slf4jVersion}"

    testCompile 'junit:junit:4.10'
    testCompile "org.springframework:spring-test:${springVersion}"

    runtime "ch.qos.logback:logback-classic:${logbackVersion}"
    runtime "ch.qos.logback:logback-core:${logbackVersion}"
    runtime 'org.hsqldb:hsqldb:1.8.0.10'
    runtime "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
}

sourceSets.main.resources.srcDir 'src/main/java'

test {
  include '**/*Test.class'
}

import org.gradle.plugins.ide.eclipse.model.SourceFolder

eclipse.classpath.file {
    whenMerged { classpath ->
        classpath.entries.findAll {
            it instanceof SourceFolder &&
            it.path.startsWith('src/main/')
        }*.output = 'build/classes/main'

        classpath.entries.findAll {
            it instanceof SourceFolder &&
            it.path.startsWith('src/test/')
        }*.output = 'build/classes/test'
    }
}
